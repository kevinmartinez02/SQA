name: Run test - with git actions

on: 
  push: 
    branches:
      - main

jobs:
  test: 
    runs-on: ubuntu-latest
    steps:
      - name: checkout code 
        uses: actions/checkout@v4

      - name: Set up Node.js 
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          package-manager-cache: 'npm'
          cache-dependency-path: SQA/s8/package-lock.json

      - name: Install dependencies
        working-directory: SQA/s8
        run: npm ci
      - name: Install Docker using Docker's official script
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
        continue-on-error: false

      - name: Install Docker Compose
        working-directory: SQA/s8
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
        continue-on-error: false

      - name: Start only Postgres with Docker Compose
        working-directory: SQA/s8
        run: docker compose -f compose.yaml -f compose.override.ci.yaml up -d db 
      - name: Install PostgreSQL client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client
      - name: Wait for Postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              break
            fi
            sleep 2
          done

      - name: Run migrations
        working-directory: SQA/s8
        env:
          DB_HOST: localhost
          DB_PORT: '5432'
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: postgres
        run: npx ts-node ./node_modules/knex/bin/cli.js migrate:latest --knexfile knexfile.ts

      - name: Run seeds
        working-directory: SQA/s8
        env:
          DB_HOST: localhost
          DB_PORT: '5432'
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: postgres
        run: npx ts-node ./node_modules/knex/bin/cli.js seed:run --knexfile knexfile.ts

      - name: Run tests and coverage
        working-directory: SQA/s8
        env:
          DB_HOST: localhost
          DB_PORT: '5432'
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: postgres
        run: npm run test -- --coverage

      - name: Stop DB
        if: always()
        working-directory: SQA/s8
        run: docker compose -f compose.yaml -f compose.override.ci.yaml down -v