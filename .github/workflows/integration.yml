name: Run test - s8

on: 
  push: 
    branches:
      - main
    paths:
      - 'SQA/s8/**'
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
 
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: SQA/s8/package-lock.json
  

      - name: install dependencies
        working-directory: SQA/s8
        run: npm ci
      - name: install docker 
        run: |
          curl -fsSL https://get.docker.com -o get-docker.sh
          sudo sh get-docker.sh
          continue-on-error: false
      - name: install docker compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/v2.3.3/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version
          continue-on-error: false
      - name: start only postgres with docker compose
        working-directory: SQA/s8
        run: docker compose -f compose.yaml -f compose.override.ci.yaml up -d db 
      - name: install postgresql client
        run: sudo apt-get update && sudo apt-get install -y postgresql-client
      - name: wait for postgres
        run: |
          for i in {1..30}; do
            if pg_isready -h localhost -p 5432 -U postgres; then
              break
            fi
            sleep 2
          done

      - name: run migration script
        working-directory: SQA/s8
        env:
          DB_HOST: localhost
          DB_PORT: '5432'
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: postgres
        run: npx ts-node ./node_modules/knex/bin/cli.js migrate:latest --knexfile knexfile.ts
      - name: run seed script
        working-directory: SQA/s8
        env:
          DB_HOST: localhost
          DB_PORT: '5432'
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: postgres
        run: npx ts-node ./node_modules/knex/bin/cli.js seed:run --knexfile knexfile.ts
      - name: run tests and coverage
        working-directory: SQA/s8
        env:
          DB_HOST: localhost
          DB_PORT: '5432'
          DB_USER: postgres
          DB_PASSWORD: postgres
          DB_NAME: postgres
        run: npm run test -- --coverage
      - name: stop db
        if: always()
        working-directory: SQA/s8
        run: docker compose -f compose.yaml -f compose.override.ci.yaml down -v